# Generated by Django 4.1.5 on 2023-01-25 15:05

from decimal import Decimal
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import easy_thumbnails.fields
import model_utils.fields
import mptt.fields
import shop.models
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('title', models.CharField(max_length=128, verbose_name='title')),
                ('slug', models.SlugField(allow_unicode=True, help_text='A short label containing only letters, numbers, underscores or hyphens for URL', max_length=255, unique=True, verbose_name='slug')),
                ('thumbnail', easy_thumbnails.fields.ThumbnailerImageField(blank=True, upload_to=shop.models.upload_directory_path, verbose_name='thumbnail')),
                ('description', models.TextField(blank=True, verbose_name='description')),
                ('description1', models.TextField(blank=True, verbose_name='description1')),
                ('discount_rate', models.DecimalField(decimal_places=2, max_digits=3, verbose_name='discount rate')),
                ('pg', models.BooleanField(default=False, verbose_name='PG')),
                ('pg_discount_rate', models.DecimalField(decimal_places=2, default=0, max_digits=3, verbose_name='PG discount rate')),
                ('naver_search_tag', models.CharField(blank=True, max_length=99, verbose_name='naver search tag')),
                ('naver_brand_name', models.CharField(blank=True, max_length=59, verbose_name='naver brand name')),
                ('naver_maker_name', models.CharField(blank=True, max_length=59, verbose_name='naver maker name')),
                ('lft', models.PositiveIntegerField(editable=False)),
                ('rght', models.PositiveIntegerField(editable=False)),
                ('tree_id', models.PositiveIntegerField(db_index=True, editable=False)),
                ('level', models.PositiveIntegerField(editable=False)),
                ('parent', mptt.fields.TreeForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='shop.category', verbose_name='parent')),
            ],
            options={
                'verbose_name': 'category',
                'verbose_name_plural': 'categories',
            },
        ),
        migrations.CreateModel(
            name='CustomerQuestion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('is_removed', models.BooleanField(default=False)),
                ('title', models.CharField(help_text="The page title as you'd like it to be seen by the public", max_length=255, verbose_name='title')),
                ('description', models.CharField(blank=True, help_text="A short description not longer than 155 characters. Don't use double quotes.", max_length=255, verbose_name='description')),
                ('keywords', models.CharField(blank=True, help_text="A comma-separated list of keywords. Don't use double quotes.", max_length=255, verbose_name='keywords')),
                ('content', models.TextField(verbose_name='content')),
                ('category', models.IntegerField(choices=[(0, 'Registration'), (1, 'Verification'), (2, 'Order/Stock'), (3, 'Payment'), (4, 'Late Delivery')], db_index=True, default=0, verbose_name='category')),
            ],
            options={
                'verbose_name': 'customer question',
                'verbose_name_plural': 'customer questions',
            },
        ),
        migrations.CreateModel(
            name='LegacyCustomer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('customer_id', models.IntegerField(unique=True, verbose_name='customer id')),
                ('email', models.CharField(max_length=254, verbose_name='email')),
                ('last_name', models.CharField(max_length=32, verbose_name='last name')),
                ('first_name', models.CharField(max_length=32, verbose_name='first name')),
                ('date_joined', models.DateTimeField(blank=True, verbose_name='date joined')),
                ('phone', models.CharField(blank=True, max_length=16, null=True, verbose_name='phone number')),
            ],
            options={
                'verbose_name': 'legacy customer',
                'verbose_name_plural': 'legacy customers',
            },
        ),
        migrations.CreateModel(
            name='NaverAdvertisementLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('ip_address', models.GenericIPAddressField(db_index=True, verbose_name='IP address')),
                ('campaign_type', models.IntegerField(choices=[(1, '파워링크'), (2, '쇼핑검색'), (4, '브랜드검색')], db_index=True, default=1, verbose_name='campaign type')),
                ('media', models.IntegerField(choices=[(27758, '네이버 통합검색 - PC'), (8753, '네이버 통합검색 - 모바일'), (122876, '네이버 검색탭'), (122875, '네이버 통합검색 광고더보기'), (11068, '네이버 쇼핑 - PC'), (33421, '네이버 쇼핑 - 모바일'), (1525, '네이버 지식iN - PC'), (36010, '네이버 지식iN - 모바일'), (96499, '네이버 카페 - PC'), (96500, '네이버 카페 - 모바일'), (118495, 'ZUM - PC'), (118496, 'ZUM - 모바일'), (171229, '네이버 뉴스 - 모바일'), (171228, '네이버 뿜 - 모바일'), (168243, '네이버 스포츠뉴스 - 모바일'), (168242, '네이버 연예뉴스 - 모바일'), (171227, '네이버 웹소설 - 모바일'), (175890, '네이버 웹툰 - 모바일'), (103848, '밴드(BAND) - 모바일'), (38367, '11번가 - PC'), (38630, '11번가 - 모바일'), (37853, '2CPU'), (23650, '82cook'), (37420, 'AK몰 - PC'), (45140, 'AK몰 - 모바일'), (11069, 'BB'), (1648, 'G마켓'), (131017, 'G마켓 - 모바일'), (141122, 'SLR클럽'), (66998, 'YTN'), (67582, 'YTN - 모바일'), (23680, 'iMBC'), (23093, 'it조선'), (81750, '가생이닷컴'), (37588, '가자아이'), (15121, '간호잡'), (58824, '건설워커 - PC'), (74321, '건설워커 - 모바일'), (49749, '교차로 - 모바일'), (41354, '교차로잡'), (158989, '교차로잡 - 모바일'), (128029, '꼬망세'), (23123, '다나와 - PC'), (87620, '다나와 - 모바일'), (168665, '다이닝코드 - PC'), (168666, '다이닝코드 - 모바일'), (14055, '닥터아파트'), (38329, '더어플'), (145966, '동원몰 - PC'), (145967, '동원몰 - 모바일'), (139215, '디시인사이드 - PC'), (131019, '디시인사이드 - 모바일'), (29978, '디올카페'), (67000, '디자이너잡'), (141121, '레포트샵'), (41352, '레포트월드'), (151173, '루리웹 - PC'), (151174, '루리웹 - 모바일'), (51655, '마이민트'), (137282, '마이민트 - 모바일'), (35324, '마이클럽'), (147491, '만개의레시피 - PC'), (26506, '맘스다이어리'), (58827, '메디업 - PC'), (62767, '메디업 - 모바일'), (37126, '메디잡 - PC'), (74320, '메디잡 - 모바일'), (58825, '메디컬잡'), (128030, '모바일만개의레시피'), (56345, '미디어잡'), (98128, '번개장터 - 모바일'), (15124, '벼룩시장 - PC'), (54186, '벼룩시장 - 모바일'), (16334, '부동산써브'), (84644, '비즈폼'), (27567, '뽐뿌 - PC'), (49745, '뽐뿌 - 모바일'), (69559, '사람인 - 모바일'), (69555, '샵마넷 - PC'), (69561, '샵마넷 - 모바일'), (69557, '샵오픈'), (156872, '셀잇 - PC'), (156873, '셀잇 - 모바일'), (141763, '쇼킹딜 - 모바일'), (62766, '수다닷컴'), (51654, '스누라이프'), (151175, '씽크존 - PC'), (20545, '아이베이비 - PC'), (49748, '아이베이비 - 모바일'), (18111, '안드로이드사이드'), (24087, '알바몬'), (15119, '알바천국 - PC'), (49746, '알바천국 - 모바일'), (36379, '에누리닷컴 - PC'), (45714, '에누리닷컴 - 모바일'), (137280, '에펨코리아'), (137281, '에펨코리아 - 모바일'), (79387, '여행오키'), (38193, '예스폼'), (70389, '오늘의유머'), (1526, '옥션'), (131018, '옥션 - 모바일'), (131268, '옥션중고장터 - 모바일'), (162341, '와글바글'), (49363, '웃긴대학'), (149196, '위메프 - 모바일'), (58826, '이엔지잡'), (37131, '이지데이 - PC'), (49747, '이지데이 - 모바일'), (37130, '이패스'), (38197, '인크루트 - PC'), (56346, '인크루트 - 모바일'), (16333, '인터넷교차로'), (35422, '인터파크 - PC'), (89270, '인터파크 - 모바일'), (38628, '일간스포츠'), (28552, '잡코리아 - PC'), (51271, '잡코리아 - 모바일'), (29983, '조선닷컴 - PC'), (46587, '조선닷컴 - 모바일'), (20808, '조아라'), (38627, '중앙일보'), (15604, '지식로그'), (29987, '채널A'), (20546, '쿠차'), (172112, '쿠차 - 모바일'), (39237, '쿠폰모아'), (19369, '클리앙'), (137283, '클리앙 - 모바일'), (15122, '키드키즈'), (69558, '패션워크'), (24086, '한겨레신문'), (20049, '한경닷컴 - PC'), (51591, '한경닷컴 - 모바일'), (106391, '해피캠퍼스 - PC'), (106392, '해피캠퍼스 - 모바일'), (156874, '해피학술 - PC'), (49362, '호텔모아'), (41353, '훈장마을 - PC'), (69560, '훈장마을 - 모바일')], db_index=True, default=27758, verbose_name='media')),
                ('query', models.CharField(max_length=255, verbose_name='ad query')),
                ('rank', models.IntegerField(verbose_name='ad rank')),
                ('ad_group', models.CharField(max_length=255, verbose_name='ad group ID')),
                ('ad', models.CharField(max_length=255, verbose_name='ad ID')),
                ('keyword_id', models.CharField(max_length=255, verbose_name='ad keyword ID')),
                ('keyword', models.CharField(max_length=255, verbose_name='ad keyword')),
                ('user_agent', models.TextField(blank=True, verbose_name='user-agent')),
            ],
            options={
                'verbose_name': 'naver advertisement log',
                'verbose_name_plural': 'naver advertisement logs',
            },
        ),
        migrations.CreateModel(
            name='NaverOrder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('is_removed', models.BooleanField(default=False)),
                ('order_no', models.UUIDField(default=uuid.uuid4, editable=False, unique=True, verbose_name='order no')),
                ('fullname', models.CharField(max_length=64, verbose_name='fullname')),
                ('phone', models.CharField(max_length=16, verbose_name='phone number')),
                ('payment_method', models.IntegerField(choices=[(0, 'Bank Transfer')], db_index=True, default=0, verbose_name='payment method')),
                ('transaction_id', models.CharField(blank=True, max_length=64, verbose_name='transaction id')),
                ('status', models.IntegerField(choices=[(0, 'payment pending'), (1, 'payment completed'), (2, 'under review'), (3, 'payment verified'), (4, 'shipped'), (5, 'refund requested'), (6, 'refund pending'), (7, 'refunded'), (8, 'voided')], db_index=True, default=3, verbose_name='order status')),
                ('total_list_price', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=11, verbose_name='total list price')),
                ('total_selling_price', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=11, verbose_name='total price')),
                ('message', models.TextField(blank=True, verbose_name='order message')),
            ],
            options={
                'verbose_name': 'naver order',
                'verbose_name_plural': 'naver orders',
            },
        ),
        migrations.CreateModel(
            name='NaverOrderProduct',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('is_removed', models.BooleanField(default=False)),
                ('name', models.CharField(max_length=255, verbose_name='product name')),
                ('subtitle', models.CharField(blank=True, max_length=255, verbose_name='product subtitle')),
                ('code', models.CharField(max_length=255, verbose_name='product code')),
                ('list_price', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=11, verbose_name='list price')),
                ('selling_price', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=11, verbose_name='selling price')),
                ('quantity', models.IntegerField(default=0, verbose_name='quantity')),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shop.naverorder', verbose_name='order')),
            ],
            options={
                'verbose_name': 'naver order product',
                'verbose_name_plural': 'naver order products',
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('is_removed', models.BooleanField(default=False)),
                ('order_no', models.UUIDField(default=uuid.uuid4, editable=False, unique=True, verbose_name='order no')),
                ('fullname', models.CharField(blank=True, max_length=64, verbose_name='fullname')),
                ('user_agent', models.TextField(blank=True, verbose_name='user-agent')),
                ('accept_language', models.TextField(blank=True, verbose_name='accept-language')),
                ('ip_address', models.GenericIPAddressField(verbose_name='IP address')),
                ('payment_method', models.IntegerField(choices=[(0, 'Bank Transfer'), (1, 'Escrow (KB)'), (2, 'PayPal'), (3, 'Credit Card'), (4, 'Bank Transfer (PG)'), (5, 'Virtual Account'), (6, 'Phone Bill')], db_index=True, default=0, verbose_name='payment method')),
                ('transaction_id', models.CharField(blank=True, max_length=64, verbose_name='transaction id')),
                ('status', models.IntegerField(choices=[(0, 'payment pending'), (1, 'payment completed'), (2, 'under review'), (3, 'payment verified'), (4, 'shipped'), (5, 'refund requested'), (6, 'refund pending'), (7, 'refunded'), (8, 'refunded'), (9, 'voided')], db_index=True, default=0, verbose_name='order status')),
                ('visible', models.IntegerField(choices=[(0, 'Hidden'), (1, 'Visible')], db_index=True, default=1, verbose_name='visible status')),
                ('total_list_price', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=11, verbose_name='total list price')),
                ('total_selling_price', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=11, verbose_name='total price')),
                ('currency', model_utils.fields.StatusField(choices=[('KRW', 'KRW'), ('USD', 'USD')], default='KRW', max_length=100, no_check_for_status=True, verbose_name='currency')),
                ('message', models.TextField(blank=True, verbose_name='order message')),
                ('suspicious', models.BooleanField(default=False, verbose_name='suspicious')),
                ('parent', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='shop.order', verbose_name='parent')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='user')),
            ],
            options={
                'verbose_name': 'pincoin order',
                'verbose_name_plural': 'pincoin orders',
            },
        ),
        migrations.CreateModel(
            name='OrderProduct',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('is_removed', models.BooleanField(default=False)),
                ('name', models.CharField(max_length=255, verbose_name='product name')),
                ('subtitle', models.CharField(blank=True, max_length=255, verbose_name='product subtitle')),
                ('code', models.CharField(max_length=255, verbose_name='product code')),
                ('list_price', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=11, verbose_name='list price')),
                ('selling_price', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=11, verbose_name='selling price')),
                ('quantity', models.IntegerField(default=0, verbose_name='quantity')),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shop.order', verbose_name='order')),
            ],
            options={
                'verbose_name': 'order product',
                'verbose_name_plural': 'order products',
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('is_removed', models.BooleanField(default=False)),
                ('name', models.CharField(max_length=255, verbose_name='product name')),
                ('subtitle', models.CharField(blank=True, max_length=255, verbose_name='product subtitle')),
                ('code', models.SlugField(allow_unicode=True, help_text='A short label containing only letters, numbers, underscores or hyphens for URL', max_length=255, unique=True, verbose_name='product code')),
                ('list_price', models.DecimalField(decimal_places=2, max_digits=11, verbose_name='list price')),
                ('selling_price', models.DecimalField(decimal_places=2, max_digits=11, verbose_name='selling price')),
                ('pg', models.BooleanField(default=False, verbose_name='PG')),
                ('pg_selling_price', models.DecimalField(decimal_places=2, default=0, max_digits=11, verbose_name='payment gateway selling price')),
                ('description', models.TextField(blank=True, verbose_name='description')),
                ('position', models.IntegerField(verbose_name='position')),
                ('status', models.IntegerField(choices=[(0, 'enabled'), (1, 'disabled')], db_index=True, default=1, verbose_name='status')),
                ('stock_quantity', models.IntegerField(default=0, verbose_name='stock quantity')),
                ('stock', models.IntegerField(choices=[(0, 'sold out'), (1, 'in stock')], db_index=True, default=1, verbose_name='stock')),
                ('minimum_stock_level', models.IntegerField(default=0, verbose_name='minimum stock level')),
                ('maximum_stock_level', models.IntegerField(default=0, verbose_name='maximum stock level')),
                ('review_count', models.PositiveIntegerField(default=0, verbose_name='review comment count')),
                ('review_count_pg', models.PositiveIntegerField(default=0, verbose_name='review comment count(PG)')),
                ('naver_partner', models.BooleanField(default=False, verbose_name='naver shopping partner zone status')),
                ('naver_partner_title', models.CharField(blank=True, max_length=255, verbose_name='naver shopping partner zone product name')),
                ('naver_partner_title_pg', models.CharField(blank=True, max_length=255, verbose_name='naver shopping partner zone product name(PG)')),
                ('naver_attribute', models.CharField(blank=True, max_length=499, verbose_name='naver attributes')),
                ('category', mptt.fields.TreeForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shop.category', verbose_name='category')),
            ],
            options={
                'verbose_name': 'product',
                'verbose_name_plural': 'products',
            },
        ),
        migrations.CreateModel(
            name='ProductList',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('name', models.CharField(max_length=255, verbose_name='name')),
                ('code', models.CharField(max_length=255, verbose_name='code')),
            ],
            options={
                'verbose_name': 'product list',
                'verbose_name_plural': 'product lists',
            },
        ),
        migrations.CreateModel(
            name='PurchaseOrder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('is_removed', models.BooleanField(default=False)),
                ('title', models.CharField(max_length=255, verbose_name='purchase order title')),
                ('content', models.TextField(verbose_name='purchase order content')),
                ('paid', models.BooleanField(default=False, verbose_name='Paid')),
                ('bank_account', models.CharField(blank=True, max_length=255, null=True, verbose_name='purchase order bank account')),
                ('amount', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=11, verbose_name='purchase order amount')),
            ],
            options={
                'verbose_name': 'purchase order',
                'verbose_name_plural': 'purchase order',
            },
        ),
        migrations.CreateModel(
            name='ShortMessageService',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('phone_from', models.CharField(blank=True, max_length=16, null=True, verbose_name='from phone number')),
                ('phone_to', models.CharField(blank=True, max_length=16, null=True, verbose_name='to phone number')),
                ('content', models.TextField(verbose_name='content')),
                ('success', models.BooleanField(default=True, verbose_name='success')),
            ],
            options={
                'verbose_name': 'short message',
                'verbose_name_plural': 'short messages',
            },
        ),
        migrations.CreateModel(
            name='Store',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('name', models.CharField(max_length=255, verbose_name='store name')),
                ('code', models.SlugField(allow_unicode=True, help_text='A short label containing only letters, numbers, underscores or hyphens for URL', max_length=255, unique=True, verbose_name='store code')),
                ('theme', models.CharField(default='default', max_length=250, verbose_name='theme')),
                ('phone', models.CharField(blank=True, max_length=16, null=True, verbose_name='phone number')),
                ('phone1', models.CharField(blank=True, max_length=16, null=True, verbose_name='phone number1')),
                ('kakao', models.CharField(blank=True, max_length=16, null=True, verbose_name='kakao ID')),
                ('bank_account', models.TextField(blank=True, verbose_name='bank accounts')),
                ('escrow_account', models.TextField(blank=True, verbose_name='escrow')),
                ('chunk_size', models.PositiveIntegerField(default=10, verbose_name='pagination chunk size')),
                ('block_size', models.PositiveIntegerField(default=10, verbose_name='pagination block size')),
                ('signup_open', models.BooleanField(default=True, verbose_name='signup open')),
                ('under_attack', models.BooleanField(default=False, verbose_name='under attack')),
            ],
            options={
                'verbose_name': 'store',
                'verbose_name_plural': 'stores',
            },
        ),
        migrations.CreateModel(
            name='Testimonials',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('is_removed', models.BooleanField(default=False)),
                ('title', models.CharField(help_text="The page title as you'd like it to be seen by the public", max_length=255, verbose_name='title')),
                ('description', models.CharField(blank=True, help_text="A short description not longer than 155 characters. Don't use double quotes.", max_length=255, verbose_name='description')),
                ('keywords', models.CharField(blank=True, help_text="A comma-separated list of keywords. Don't use double quotes.", max_length=255, verbose_name='keywords')),
                ('content', models.TextField(verbose_name='content')),
                ('owner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='owner')),
                ('store', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shop.store', verbose_name='store')),
            ],
            options={
                'verbose_name': 'testimonials',
                'verbose_name_plural': 'testimonials',
            },
        ),
        migrations.CreateModel(
            name='Voucher',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('is_removed', models.BooleanField(default=False)),
                ('code', models.CharField(max_length=64, verbose_name='voucher code')),
                ('remarks', models.CharField(blank=True, max_length=64, verbose_name='voucher remarks')),
                ('status', models.IntegerField(choices=[(0, 'purchased'), (1, 'sold'), (2, 'revoked')], db_index=True, default=0, verbose_name='status')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='shop.product', verbose_name='product')),
            ],
            options={
                'verbose_name': 'voucher',
                'verbose_name_plural': 'vouchers',
            },
        ),
        migrations.CreateModel(
            name='TestimonialsAnswer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('content', models.TextField(verbose_name='content')),
                ('testimonial', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shop.testimonials', verbose_name='testimonials')),
            ],
            options={
                'verbose_name': 'testimonials answer',
                'verbose_name_plural': 'testimonials answers',
            },
        ),
        migrations.CreateModel(
            name='QuestionAnswer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('content', models.TextField(verbose_name='content')),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shop.customerquestion', verbose_name='question')),
            ],
            options={
                'verbose_name': 'question answer',
                'verbose_name_plural': 'question answers',
            },
        ),
        migrations.CreateModel(
            name='PurchaseOrderPayment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('is_removed', models.BooleanField(default=False)),
                ('account', models.IntegerField(choices=[(0, 'KOOKMIN BANK'), (1, 'NONGHYUP BANK'), (2, 'SHINHAN BANK'), (3, 'WOORI BANK'), (4, 'IBK BANK')], db_index=True, default=0, verbose_name='account')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=11, verbose_name='amount')),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shop.purchaseorder', verbose_name='order')),
            ],
            options={
                'verbose_name': 'purchase order payment',
                'verbose_name_plural': 'purchase order payments',
            },
        ),
        migrations.CreateModel(
            name='ProductListMembership',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('position', models.IntegerField(verbose_name='position')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shop.product', verbose_name='product')),
                ('product_list', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shop.productlist', verbose_name='product list')),
            ],
            options={
                'verbose_name': 'product list membership',
                'verbose_name_plural': 'product list membership',
            },
        ),
        migrations.AddField(
            model_name='productlist',
            name='products',
            field=models.ManyToManyField(through='shop.ProductListMembership', to='shop.product'),
        ),
        migrations.AddField(
            model_name='productlist',
            name='store',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shop.store', verbose_name='store'),
        ),
        migrations.AddField(
            model_name='product',
            name='store',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shop.store', verbose_name='store'),
        ),
        migrations.CreateModel(
            name='OrderProductVoucher',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('is_removed', models.BooleanField(default=False)),
                ('code', models.CharField(max_length=64, verbose_name='voucher code')),
                ('revoked', models.BooleanField(default=False, verbose_name='revoked')),
                ('remarks', models.CharField(blank=True, max_length=64, verbose_name='voucher remarks')),
                ('order_product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shop.orderproduct', verbose_name='order product')),
                ('voucher', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='shop.voucher', verbose_name='voucher')),
            ],
            options={
                'verbose_name': 'order voucher code',
                'verbose_name_plural': 'order voucher codes',
            },
        ),
        migrations.CreateModel(
            name='OrderPayment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('is_removed', models.BooleanField(default=False)),
                ('account', models.IntegerField(choices=[(0, 'KOOKMIN BANK'), (1, 'NONGHYUP BANK'), (2, 'SHINHAN BANK'), (3, 'WOORI BANK'), (4, 'IBK BANK'), (5, 'PayPal')], db_index=True, default=0, verbose_name='account')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=11, verbose_name='amount')),
                ('balance', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=11, verbose_name='balance')),
                ('received', models.DateTimeField(verbose_name='received date')),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shop.order', verbose_name='order')),
            ],
            options={
                'verbose_name': 'order payment',
                'verbose_name_plural': 'order payments',
            },
        ),
        migrations.CreateModel(
            name='NoticeMessage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('is_removed', models.BooleanField(default=False)),
                ('title', models.CharField(help_text="The page title as you'd like it to be seen by the public", max_length=255, verbose_name='title')),
                ('description', models.CharField(blank=True, help_text="A short description not longer than 155 characters. Don't use double quotes.", max_length=255, verbose_name='description')),
                ('keywords', models.CharField(blank=True, help_text="A comma-separated list of keywords. Don't use double quotes.", max_length=255, verbose_name='keywords')),
                ('content', models.TextField(verbose_name='content')),
                ('category', models.IntegerField(choices=[(0, 'Common'), (1, 'Game Event'), (2, 'Price Policy')], db_index=True, default=0, verbose_name='category')),
                ('owner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='owner')),
                ('store', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shop.store', verbose_name='store')),
            ],
            options={
                'verbose_name': 'notice',
                'verbose_name_plural': 'notice',
            },
        ),
        migrations.CreateModel(
            name='NaverOrderProductVoucher',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('is_removed', models.BooleanField(default=False)),
                ('code', models.CharField(max_length=64, verbose_name='voucher code')),
                ('revoked', models.BooleanField(default=False, verbose_name='revoked')),
                ('remarks', models.CharField(blank=True, max_length=64, verbose_name='voucher remarks')),
                ('order_product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shop.naverorderproduct', verbose_name='order product')),
                ('voucher', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='shop.voucher', verbose_name='voucher')),
            ],
            options={
                'verbose_name': 'naver order voucher code',
                'verbose_name_plural': 'naver order voucher codes',
            },
        ),
        migrations.CreateModel(
            name='MileageLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('is_removed', models.BooleanField(default=False)),
                ('mileage', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=11, verbose_name='mileage')),
                ('memo', models.TextField(blank=True, verbose_name='mileage memo')),
                ('order', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='shop.order', verbose_name='order')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='user')),
            ],
            options={
                'verbose_name': 'mileage log',
                'verbose_name_plural': 'mileage logs',
            },
        ),
        migrations.CreateModel(
            name='LegacyOrderProduct',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_name', models.CharField(max_length=128, verbose_name='product name')),
                ('customer_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shop.legacycustomer', to_field='customer_id', verbose_name='customer id')),
            ],
            options={
                'verbose_name': 'legacy order product',
                'verbose_name_plural': 'legacy order products',
            },
        ),
        migrations.CreateModel(
            name='LegacyOrder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_purchased', models.DateTimeField(blank=True, verbose_name='last purchased date')),
                ('total_order_count', models.IntegerField(default=0, verbose_name='total order count')),
                ('last_total', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=11, verbose_name='last total')),
                ('max_price', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=11, verbose_name='max price')),
                ('average_price', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=11, verbose_name='average price')),
                ('customer_id', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='shop.legacycustomer', to_field='customer_id', verbose_name='customer id')),
            ],
            options={
                'verbose_name': 'legacy order',
                'verbose_name_plural': 'legacy orders',
            },
        ),
        migrations.CreateModel(
            name='FaqMessage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('is_removed', models.BooleanField(default=False)),
                ('title', models.CharField(help_text="The page title as you'd like it to be seen by the public", max_length=255, verbose_name='title')),
                ('description', models.CharField(blank=True, help_text="A short description not longer than 155 characters. Don't use double quotes.", max_length=255, verbose_name='description')),
                ('keywords', models.CharField(blank=True, help_text="A comma-separated list of keywords. Don't use double quotes.", max_length=255, verbose_name='keywords')),
                ('content', models.TextField(verbose_name='content')),
                ('category', models.IntegerField(choices=[(0, 'Registration'), (1, 'Verification'), (2, 'Order/Stock'), (3, 'Payment'), (4, 'Delivery')], db_index=True, default=0, verbose_name='category')),
                ('position', models.IntegerField(verbose_name='position')),
                ('owner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='owner')),
                ('store', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shop.store', verbose_name='store')),
            ],
            options={
                'verbose_name': 'frequently asked question',
                'verbose_name_plural': 'frequently asked questions',
            },
        ),
        migrations.AddField(
            model_name='customerquestion',
            name='order',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='shop.order', verbose_name='order'),
        ),
        migrations.AddField(
            model_name='customerquestion',
            name='owner',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='owner'),
        ),
        migrations.AddField(
            model_name='customerquestion',
            name='store',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shop.store', verbose_name='store'),
        ),
        migrations.AddField(
            model_name='category',
            name='store',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shop.store', verbose_name='store'),
        ),
        migrations.AddIndex(
            model_name='voucher',
            index=models.Index(fields=['code'], name='shop_vouche_code_b378c1_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='voucher',
            unique_together={('product', 'code')},
        ),
    ]
